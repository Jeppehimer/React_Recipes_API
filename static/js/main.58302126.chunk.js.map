{"version":3,"sources":["recipe.module.css","components/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Recipe","title","calories","image","ingredients","cautions","useState","showPopUp","setShowPopUp","className","style","recipe","Math","floor","map","ingredient","text","length","onClick","isOpen","onRequestClose","content","backgroundColor","borderRadius","textAlign","caution","uuidv4","padding","src","alt","Modal","setAppElement","App","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,OAAS,yB,oNCwDZC,EAlDA,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAAe,EAElCC,oBAAS,GAFyB,mBAE7DC,EAF6D,KAElDC,EAFkD,KAIlE,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKV,IACL,2CAAcW,KAAKC,MAAMX,MACzB,6BACKE,EAAYU,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGL,IAAlBX,EAASY,QACN,wBACIR,UAAU,SACVS,QAAS,kBAAMV,GAAa,IAFhC,8BAQJ,eAAC,IAAD,CAEIW,OAAQZ,EACRa,eAAgB,kBAAMZ,GAAa,IACnCC,UAAU,WACVC,MACI,CACIW,QAAS,CACLC,gBAAiB,aACjBC,aAAc,QAT9B,UAcE,oBAAIb,MAAO,CAACc,UAAW,UAAvB,8BACA,6BACKnB,EAASS,KAAI,SAAAW,GAAO,OACjB,6BAAKA,SAGb,wBAAQP,QAAS,kBAAMV,GAAa,IAApC,qBAnBOkB,eAsBT,qBAAKhB,MAAO,CAACiB,QAAQ,QAASC,IAAKzB,EAAO0B,IAAI,SC9C1DC,IAAMC,cAAc,SAEpB,IA8DeC,EA9DH,WAEV,IAFgB,EAKc1B,mBAAS,IALvB,mBAKT2B,EALS,KAKAC,EALA,OAMY5B,mBAAS,IANrB,mBAMT6B,EANS,KAMDC,EANC,OAOU9B,mBAAS,IAPnB,mBAOT+B,EAPS,KAOFC,EAPE,KAShBC,qBAAW,WACTC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAgBhB,OACE,sBAAKrC,UAAU,MAAf,UACE,uBAAMA,UAAU,cAAcsC,SARhB,SAACC,GACjBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAKR,UACE,uBACE3B,UAAU,aACVyC,KAAK,OACLC,YAAY,4CACZC,MAAOjB,EACPkB,SAlBa,SAACL,GACpBZ,EAAUY,EAAEM,OAAOF,UAmBf,wBACE3C,UAAU,gBACVyC,KAAK,SAFP,uBAOF,qBAAKzC,UAAU,UAAf,SACGwB,EAAQnB,KAAI,SAAAH,GAAM,OACjB,cAAC,EAAD,CAEEV,MAAOU,EAAOA,OAAO4C,MACrBrD,SAAUS,EAAOA,OAAOT,SACxBC,MAAOQ,EAAOA,OAAOR,MACrBC,YAAaO,EAAOA,OAAOP,YAC3BC,SAAUM,EAAOA,OAAON,UALnBqB,wBC7CF8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.58302126.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__10Rkq\"};","import React, { useState } from \"react\";\r\nimport style from \"../recipe.module.css\";\r\nimport Modal from \"react-modal\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\n\r\nconst Recipe = ({ title, calories, image, ingredients, cautions }) => {\r\n    \r\n  const [showPopUp, setShowPopUp] = useState(false);\r\n\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <p>Calories: {Math.floor(calories)}</p>\r\n            <ul>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ul>\r\n            {cautions.length!==0 && \r\n                <button \r\n                    className=\"button\" \r\n                    onClick={() => setShowPopUp(true)}\r\n                 >\r\n                    Dietary Cautions\r\n                </button>\r\n            }\r\n                \r\n            <Modal \r\n                key={uuidv4()}\r\n                isOpen={showPopUp} \r\n                onRequestClose={() => setShowPopUp(false)}\r\n                className=\"my-modal\"\r\n                style={\r\n                    {\r\n                        content: {\r\n                            backgroundColor: \"lightcoral\",\r\n                            borderRadius: \"1px\",   \r\n                        }\r\n                    }\r\n                }\r\n            >\r\n              <h3 style={{textAlign: \"center\"}}>Dietary Cautions</h3>\r\n              <ul>\r\n                  {cautions.map(caution => (\r\n                      <li>{caution}</li>\r\n                  ))}\r\n              </ul>\r\n              <button onClick={() => setShowPopUp(false)}>Close</button>\r\n            </Modal>\r\n\r\n            <img style={{padding:\"10px\"}} src={image} alt=\"\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Modal from \"react-modal\";\nimport Recipe from \"./components/Recipe\";\n\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  \n  const APP_ID = \"44ad7bf6\";\n  const APP_KEY = \"f08f9361714c6de24654ffaa27ba52fc\";\n  \n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n    \n  useEffect( () => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  }\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <form className=\"search-form\" onSubmit={getSearch}>\n        <input \n          className=\"search-bar\" \n          type=\"text\" \n          placeholder=\"Try searching for recipes or ingredients!\"\n          value={search} \n          onChange={updateSearch} \n        />\n        <button \n          className=\"search-button\" \n          type=\"submit\" \n        >\n          Search\n        </button>\n      </form>\n      <div className=\"recipes\">\n        {recipes.map(recipe => (\n          <Recipe \n            key={uuidv4()}\n            title={recipe.recipe.label} \n            calories={recipe.recipe.calories} \n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            cautions={recipe.recipe.cautions}\n          />    \n        ))}     \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}